version: '3.8'

services:
  event-collector:
    container_name: event-collector-prod
    env_file:
      - database_local.env
      - .env
      - db_hosted.env
    build:
      dockerfile: Dockerfile.prod
      context: "./backend/event-collector"
    volumes:
      - /app/node_modules
      - ./backend/event-collector:/app
    ports:
      - '3000:3000'
  
  query-collector:
    container_name: query-service-prod
    env_file:
      - database_local.env
      - .env
      - db_hosted.env
    build:
      dockerfile: Dockerfile.prod
      context: "./backend/query-service"
    volumes:
      - /app/node_modules
      - ./backend/query-service:/app
    ports:
      - '6060:6060'

  fusion-app:
    container_name: frontend-prod
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./frontend:/app
    ports:
      - '1337:80'

  database:
    image: "postgres" # use latest official postgres version
    ports:
      - "5432:5432"
    env_file:
      - database_local.env # configure postgres
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down

volumes:
  database-data: # named volumes can be managed easier using docker-compose